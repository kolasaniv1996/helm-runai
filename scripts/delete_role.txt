import requests

# Configuration
CLIENT_ID = 'test'
CLIENT_SECRET = 'xxxxxxx'
APP_URL = 'https://vivek-test.runailabs-cs.com'   
REALM = 'runai'

def get_bearer_token():
    """Get authentication token"""
    token_url = f"{APP_URL}/auth/realms/{REALM}/protocol/openid-connect/token"
    payload = {
        "grant_type": "client_credentials",
        "client_id": CLIENT_ID,
        "client_secret": CLIENT_SECRET
    }
    headers = {"Content-Type": "application/x-www-form-urlencoded"}
    response = requests.post(token_url, data=payload, headers=headers)
    response.raise_for_status()
    return response.json()["access_token"]


def delete_role(role_id):
    """Delete a role by ID"""
    token = get_bearer_token()
    
    url = f"{APP_URL}/api/v2/authorization/roles/{role_id}"
    headers = {
        "Authorization": f"Bearer {token}",
        "Accept": "application/json"
    }
    
    print(f"Deleting role {role_id}...")
    
    response = requests.delete(url, headers=headers)
    
    if response.status_code in [200, 204]:
        print(f" Role {role_id} deleted successfully!")
        return True
    elif response.status_code == 404:
        print(f"Role {role_id} not found")
        return False
    elif response.status_code == 400:
        print(f"Cannot delete role: {response.text}")
        print("   Note: Roles cannot be deleted if they are currently in use")
        return False
    else:
        print(f"Failed to delete role: {response.status_code} - {response.text}")
        return False

if __name__ == "__main__":
    # Delete a role - replace with your actual role ID
    role_id = "123"  # Replace with your role ID
    
    delete_role(role_id)
